package GeDL.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Comparison = 0;
  public static final int Condition = 1;
  public static final int DataStream = 2;
  public static final int DataStreamList = 3;
  public static final int DateTime = 4;
  public static final int DetectionExtent = 5;
  public static final int DetectionRule = 6;
  public static final int DetectionTime = 7;
  public static final int Distance = 8;
  public static final int Event = 9;
  public static final int EventDefinition = 10;
  public static final int Expression = 11;
  public static final int Feature = 12;
  public static final int SpatialGranularity = 13;
  public static final int Time = 14;
  public static final int TimeInstance = 15;
  public static final int TimeType = 16;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x5194ff76e65f4a57L, 0xba19488ab6bc5674L);
    builder.put(0x36a0243b46771032L, Comparison);
    builder.put(0x13f16dac9a39ed0eL, Condition);
    builder.put(0x68083649fc8fe878L, DataStream);
    builder.put(0x68083649fc8fe881L, DataStreamList);
    builder.put(0x36a0243b46771f4fL, DateTime);
    builder.put(0x36a0243b46771eebL, DetectionExtent);
    builder.put(0x68083649fc9080a8L, DetectionRule);
    builder.put(0x36a0243b46771f28L, DetectionTime);
    builder.put(0x36a0243b46771efbL, Distance);
    builder.put(0x68083649fc8fd060L, Event);
    builder.put(0x13f16dac9a39ed34L, EventDefinition);
    builder.put(0x36a0243b46771033L, Expression);
    builder.put(0x36a0243b46771ef4L, Feature);
    builder.put(0x36a0243b46771f09L, SpatialGranularity);
    builder.put(0x36a0243b46771f4cL, Time);
    builder.put(0x36a0243b46771f45L, TimeInstance);
    builder.put(0x36a0243b46771f2cL, TimeType);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
