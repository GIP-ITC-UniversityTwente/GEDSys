@App:name('AirQuality')
@App:description('A descriptionn of the app')

@source(
  type = 'http',
  receiver.url="http://localhost:8006/airquality-pm25",
  @map(type = 'json')
)
define stream PM25 (
  observedProperty string,
  phenomenonTime string,
  resultTime string,
  result double,
  location object
);

@sink(
  type = 'log',
  @map(type = 'json', validate.json = 'true', enclosing.element = '$.gevent')
)
define stream AlertPM25 (
  notification string,
  observations object,
  detectionTime string
);

@info(name = 'AirQuality')
from PM25#window.time(10 millisecond)[result > 15.f]
select 'AlertPM25' as notification,
map:create('PM25',
    map:create(
      'observedProperty', PM25.observedProperty,
      'phenomenonTime', PM25.phenomenonTime,
      'resultTime', PM25.resultTime,
      'result', PM25.result,
      'location', PM25.location
      ) ) as observations,
      time:currentTimestamp() as detectionTime
having time:timestampInMilliseconds(detectionTime, 'yyyy-MM-DD HH:MM:SS') >= time:timestampInMilliseconds("2024-04-06 10:00:00", 'yyyy-MM-DD HH:MM:SS') and time:timestampInMilliseconds(detectionTime, 'yyyy-MM-DD HH:MM:SS') <= time:timestampInMilliseconds("2024-04-06 18:00:00", 'yyyy-MM-DD HH:MM:SS')
insert into AlertPM25;
