package GeDL.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptComparison = createDescriptorForComparison();
  /*package*/ final ConceptDescriptor myConceptCondition = createDescriptorForCondition();
  /*package*/ final ConceptDescriptor myConceptDataStream = createDescriptorForDataStream();
  /*package*/ final ConceptDescriptor myConceptDataStreamList = createDescriptorForDataStreamList();
  /*package*/ final ConceptDescriptor myConceptDateTime = createDescriptorForDateTime();
  /*package*/ final ConceptDescriptor myConceptDetectionExtent = createDescriptorForDetectionExtent();
  /*package*/ final ConceptDescriptor myConceptDetectionRule = createDescriptorForDetectionRule();
  /*package*/ final ConceptDescriptor myConceptDetectionTime = createDescriptorForDetectionTime();
  /*package*/ final ConceptDescriptor myConceptDistance = createDescriptorForDistance();
  /*package*/ final ConceptDescriptor myConceptDuration = createDescriptorForDuration();
  /*package*/ final ConceptDescriptor myConceptDurationWithUnits = createDescriptorForDurationWithUnits();
  /*package*/ final ConceptDescriptor myConceptEvent = createDescriptorForEvent();
  /*package*/ final ConceptDescriptor myConceptEventDefinition = createDescriptorForEventDefinition();
  /*package*/ final ConceptDescriptor myConceptExpression = createDescriptorForExpression();
  /*package*/ final ConceptDescriptor myConceptFeature = createDescriptorForFeature();
  /*package*/ final ConceptDescriptor myConceptSpatialGranulariy = createDescriptorForSpatialGranulariy();
  /*package*/ final ConceptDescriptor myConceptTime = createDescriptorForTime();
  /*package*/ final ConceptDescriptor myConceptTimeInstance = createDescriptorForTimeInstance();
  /*package*/ final ConceptDescriptor myConceptTimeType = createDescriptorForTimeType();
  /*package*/ final ConceptDescriptor myConceptTimeWindow = createDescriptorForTimeWindow();
  /*package*/ final EnumerationDescriptor myEnumerationDurationUnit = new EnumerationDescriptor_DurationUnit();
  /*package*/ final EnumerationDescriptor myEnumerationSpatialRelation = new EnumerationDescriptor_SpatialRelation();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptComparison, myConceptCondition, myConceptDataStream, myConceptDataStreamList, myConceptDateTime, myConceptDetectionExtent, myConceptDetectionRule, myConceptDetectionTime, myConceptDistance, myConceptDuration, myConceptDurationWithUnits, myConceptEvent, myConceptEventDefinition, myConceptExpression, myConceptFeature, myConceptSpatialGranulariy, myConceptTime, myConceptTimeInstance, myConceptTimeType, myConceptTimeWindow);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Comparison:
        return myConceptComparison;
      case LanguageConceptSwitch.Condition:
        return myConceptCondition;
      case LanguageConceptSwitch.DataStream:
        return myConceptDataStream;
      case LanguageConceptSwitch.DataStreamList:
        return myConceptDataStreamList;
      case LanguageConceptSwitch.DateTime:
        return myConceptDateTime;
      case LanguageConceptSwitch.DetectionExtent:
        return myConceptDetectionExtent;
      case LanguageConceptSwitch.DetectionRule:
        return myConceptDetectionRule;
      case LanguageConceptSwitch.DetectionTime:
        return myConceptDetectionTime;
      case LanguageConceptSwitch.Distance:
        return myConceptDistance;
      case LanguageConceptSwitch.Duration:
        return myConceptDuration;
      case LanguageConceptSwitch.DurationWithUnits:
        return myConceptDurationWithUnits;
      case LanguageConceptSwitch.Event:
        return myConceptEvent;
      case LanguageConceptSwitch.EventDefinition:
        return myConceptEventDefinition;
      case LanguageConceptSwitch.Expression:
        return myConceptExpression;
      case LanguageConceptSwitch.Feature:
        return myConceptFeature;
      case LanguageConceptSwitch.SpatialGranulariy:
        return myConceptSpatialGranulariy;
      case LanguageConceptSwitch.Time:
        return myConceptTime;
      case LanguageConceptSwitch.TimeInstance:
        return myConceptTimeInstance;
      case LanguageConceptSwitch.TimeType:
        return myConceptTimeType;
      case LanguageConceptSwitch.TimeWindow:
        return myConceptTimeWindow;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationDurationUnit, myEnumerationSpatialRelation);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForComparison() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "Comparison", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22a3L);
    b.class_(false, false, false);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/6208379058501919395");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "Condition", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22a5L);
    b.class_(false, false, false);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/6208379058501919397");
    b.version(3);
    b.property("expression", 0x562897dc3cfb22a6L).type(PrimitiveTypeId.STRING).origin("6208379058501919398").done();
    b.alias("condition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataStream() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "DataStream", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22a8L);
    b.class_(false, false, false);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/6208379058501919400");
    b.version(3);
    b.property("PhenomenonName", 0x562897dc3cfb22a9L).type(PrimitiveTypeId.STRING).origin("6208379058501919401").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataStreamList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "DataStreamList", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22acL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/6208379058501919404");
    b.version(3);
    b.aggregate("dataStreams", 0x562897dc3cfb22b6L).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22a8L).optional(true).ordered(true).multiple(true).origin("6208379058501919414").done();
    b.alias("DataStream List");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDateTime() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "DateTime", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22b9L);
    b.class_(false, false, false);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/6208379058501919417");
    b.version(3);
    b.property("datetime", 0x562897dc3cfb22baL).type(PrimitiveTypeId.STRING).origin("6208379058501919418").done();
    b.alias("date time");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDetectionExtent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "DetectionExtent", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22c2L);
    b.class_(false, false, false);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/6208379058501919426");
    b.version(3);
    b.aggregate("feature", 0x562897dc3cfb22c4L).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22c7L).optional(true).ordered(true).multiple(true).origin("6208379058501919428").done();
    b.aggregate("buffer", 0x562897dc3cfb22c5L).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22c9L).optional(true).ordered(true).multiple(false).origin("6208379058501919429").done();
    b.alias("detection extent");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDetectionRule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "DetectionRule", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfbed05L);
    b.class_(false, false, false);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/6208379058501971205");
    b.version(3);
    b.aggregate("condition", 0x562897dc3cfbed08L).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22a5L).optional(true).ordered(true).multiple(false).origin("6208379058501971208").done();
    b.aggregate("extent", 0x562897dc3cfbed09L).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22c2L).optional(true).ordered(true).multiple(false).origin("6208379058501971209").done();
    b.aggregate("granularity", 0x562897dc3cfbed0aL).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb234eL).optional(true).ordered(true).multiple(false).origin("6208379058501971210").done();
    b.aggregate("detectionTime", 0x61e69d1f3f9a2231L).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfbed0cL).optional(true).ordered(true).multiple(false).origin("7054498623859073585").done();
    b.alias("event rule");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDetectionTime() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "DetectionTime", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfbed0cL);
    b.class_(false, false, false);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/6208379058501971212");
    b.version(3);
    b.aggregate("timeType", 0x562897dc3cfbed0dL).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb2359L).optional(true).ordered(true).multiple(false).origin("6208379058501971213").done();
    b.alias("detection time");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDistance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "Distance", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22c9L);
    b.class_(false, false, false);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/6208379058501919433");
    b.version(3);
    b.property("value", 0x562897dc3cfb22caL).type(MetaIdFactory.dataTypeId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x494547eeedc219baL)).origin("6208379058501919434").done();
    b.property("unit", 0x61e69d1f3f99b4a7L).type(PrimitiveTypeId.STRING).origin("7054498623859045543").done();
    b.alias("distance");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDuration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "Duration", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x61e69d1f3f9ceee8L);
    b.class_(false, false, false);
    // extends: GeDL.structure.TimeType
    b.super_(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb2359L);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/7054498623859257064");
    b.version(3);
    b.aggregate("time", 0x61e69d1f3f9cf2abL).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb2351L).optional(true).ordered(true).multiple(false).origin("7054498623859258027").done();
    b.aggregate("durationWithUnits", 0x61e69d1f3f9d0664L).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x61e69d1f3f9cf8d6L).optional(true).ordered(true).multiple(false).origin("7054498623859263076").done();
    b.alias("duration");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDurationWithUnits() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "DurationWithUnits", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x61e69d1f3f9cf8d6L);
    b.class_(false, false, false);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/7054498623859259606");
    b.version(3);
    b.property("value", 0x61e69d1f3f9cfb2dL).type(PrimitiveTypeId.INTEGER).origin("7054498623859260205").done();
    b.property("unit", 0x61e69d1f3f9cfe73L).type(MetaIdFactory.dataTypeId(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x61e69d1f3f9cf5f1L)).origin("7054498623859261043").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEvent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "Event", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb2345L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/6208379058501919557");
    b.version(3);
    b.aggregate("dataStreams", 0x67f5466a8138b3ffL).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22a8L).optional(true).ordered(true).multiple(true).origin("7490970978449142783").done();
    b.aggregate("detectionRules", 0x67f5466a8138b3faL).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfbed05L).optional(true).ordered(true).multiple(true).origin("7490970978449142778").done();
    b.alias("event");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEventDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "EventDefinition", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb2348L);
    b.class_(false, false, true);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/6208379058501919560");
    b.version(3);
    b.property("eventName", 0x562897dc3cfb2349L).type(PrimitiveTypeId.STRING).origin("6208379058501919561").done();
    b.associate("datastreams", 0x562897dc3cfb234aL).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22a8L).optional(true).origin("6208379058501919562").done();
    b.associate("condition", 0x562897dc3cfb234bL).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22a5L).optional(true).origin("6208379058501919563").done();
    b.alias("event definition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "Expression", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb234dL);
    b.class_(false, false, false);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/6208379058501919565");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFeature() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "Feature", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22c7L);
    b.class_(false, false, false);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/6208379058501919431");
    b.version(3);
    b.property("srid", 0x61e69d1f3f98c376L).type(PrimitiveTypeId.INTEGER).origin("7054498623858983798").done();
    b.property("wkt", 0x562897dc3cfb22c8L).type(PrimitiveTypeId.STRING).origin("6208379058501919432").done();
    b.alias("feature");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSpatialGranulariy() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "SpatialGranulariy", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb234eL);
    b.class_(false, false, false);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/6208379058501919566");
    b.version(3);
    b.property("SpatialRelation", 0x562897dc3cfb2350L).type(MetaIdFactory.dataTypeId(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb235cL)).origin("6208379058501919568").done();
    b.aggregate("distance", 0x61e69d1f3f99e20aL).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22c9L).optional(true).ordered(true).multiple(false).origin("7054498623859057162").done();
    b.alias("granularity");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTime() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "Time", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb2351L);
    b.class_(false, false, false);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/6208379058501919569");
    b.version(3);
    b.property("time", 0x562897dc3cfb2352L).type(PrimitiveTypeId.STRING).origin("6208379058501919570").done();
    b.alias("time");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTimeInstance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "TimeInstance", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb2353L);
    b.class_(false, false, false);
    // extends: GeDL.structure.TimeType
    b.super_(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb2359L);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/6208379058501919571");
    b.version(3);
    b.aggregate("time", 0x562897dc3cfb2354L).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb2351L).optional(true).ordered(true).multiple(false).origin("6208379058501919572").done();
    b.aggregate("dateTime", 0x562897dc3cfb2356L).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22b9L).optional(true).ordered(true).multiple(false).origin("6208379058501919574").done();
    b.alias("time instance");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTimeType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "TimeType", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb2359L);
    b.class_(false, true, false);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/6208379058501919577");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTimeWindow() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GeDL", "TimeWindow", 0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x61e69d1f3f9a517eL);
    b.class_(false, false, false);
    // extends: GeDL.structure.TimeType
    b.super_(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb2359L);
    b.origin("r:0acff501-71d6-4896-b79d-b8d89273d027(GeDL.structure)/7054498623859085694");
    b.version(3);
    b.aggregate("StartTime", 0x61e69d1f3f9a5af4L).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb2353L).optional(false).ordered(true).multiple(false).origin("7054498623859088116").done();
    b.aggregate("EndTime", 0x61e69d1f3f9a5f20L).target(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb2353L).optional(false).ordered(true).multiple(false).origin("7054498623859089184").done();
    b.alias("time window");
    return b.create();
  }
}
