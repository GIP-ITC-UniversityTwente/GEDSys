package GeDL.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.core.behavior.BaseConcept__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SProperty;

public class DataStream_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    String eventName = "";
    // find event name in the root concept (Event definition
    for (SNode child : ListSequence.fromList(SNodeOperations.getChildren(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(ctx.getPrimaryInput())))))) {
      if (SNodeOperations.isInstanceOf(child, CONCEPTS.Event$xy)) {
        if (isNotEmptyString(BaseConcept__BehaviorDescriptor.getDetailedPresentation_id22G2W3WJ92t.invoke(child))) {
          eventName = BaseConcept__BehaviorDescriptor.getDetailedPresentation_id22G2W3WJ92t.invoke(child);
        } else {
          tgs.append(">>> \"ERROR: no instance of Event was found in parents!\"");
        }
      }
    }
    tgs.append("@source(");
    tgs.newLine();
    ctx.getBuffer().area().increaseIndent();
    tgs.indent();
    tgs.append("type = 'http',");
    tgs.newLine();
    tgs.indent();
    tgs.append("receiver.url=\"http://localhost:8006/");
    tgs.append(eventName.toLowerCase());
    tgs.append("-");
    tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Phenomenon$O7ge), PROPS.name$MnvL).toLowerCase());
    tgs.append("\",");
    tgs.newLine();
    tgs.indent();
    tgs.append("@map(type = 'json')");
    tgs.newLine();
    ctx.getBuffer().area().decreaseIndent();
    tgs.append(")");
    tgs.newLine();
    tgs.append("define stream ");
    tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Phenomenon$O7ge), PROPS.name$MnvL));
    tgs.append(" (");
    tgs.newLine();
    ctx.getBuffer().area().increaseIndent();
    tgs.indent();
    tgs.append("observedProperty string,");
    tgs.newLine();
    tgs.indent();
    tgs.append("resultTime string,");
    tgs.newLine();
    if (SPropertyOperations.getEnum(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Phenomenon$O7ge), PROPS.observationType$XTKQ).toString().equals("measurement")) {
      tgs.indent();
      tgs.append("result double,");
      tgs.newLine();
    }
    if (SPropertyOperations.getEnum(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Phenomenon$O7ge), PROPS.observationType$XTKQ).toString().equals("category")) {
      tgs.indent();
      tgs.append("result string,");
      tgs.newLine();
    }
    tgs.indent();
    tgs.append("location object");
    tgs.newLine();
    ctx.getBuffer().area().decreaseIndent();
    tgs.append(");");
  }
  private static boolean isNotEmptyString(String str) {
    return str != null && str.length() > 0;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Event$xy = MetaAdapterFactory.getConcept(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb2345L, "GeDL.structure.Event");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink Phenomenon$O7ge = MetaAdapterFactory.getContainmentLink(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x562897dc3cfb22a8L, 0x61e69d1f3f9fbfc6L, "Phenomenon");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
    /*package*/ static final SProperty observationType$XTKQ = MetaAdapterFactory.getProperty(0x35b540ea51fc45c2L, 0x8fb01d48ca99c3dbL, 0x61e69d1f3f9fb976L, 0x56a0a8571da38c58L, "observationType");
  }
}
